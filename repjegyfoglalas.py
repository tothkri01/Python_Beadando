from abc import ABC, abstractmethod
from datetime import date

# --- Absztrakt J√°rat oszt√°ly ---
class Jarat(ABC):
    def __init__(self, jaratszam, celallomas, jegyar):
        self.jaratszam = jaratszam
        self.celallomas = celallomas
        self.jegyar = jegyar

    @abstractmethod
    def jarat_info(self):
        pass

# --- Belf√∂ldiJarat oszt√°ly ---
class BelfoldiJarat(Jarat):
    def __init__(self, jaratszam, celallomas, jegyar, tavolsag_km):
        super().__init__(jaratszam, celallomas, jegyar)
        self.tavolsag_km = tavolsag_km

    def jarat_info(self):
        return f"Belf√∂ldi | J√°ratsz√°m: {self.jaratszam}, C√©l: {self.celallomas}, T√°vols√°g: {self.tavolsag_km} km, Jegy√°r: {self.jegyar} Ft"

# --- NemzetkoziJarat oszt√°ly ---
class NemzetkoziJarat(Jarat):
    def __init__(self, jaratszam, celallomas, jegyar, orszag):
        super().__init__(jaratszam, celallomas, jegyar)
        self.orszag = orszag

    def jarat_info(self):
        return f"Nemzetk√∂zi | J√°ratsz√°m: {self.jaratszam}, C√©l: {self.celallomas} ({self.orszag}), Jegy√°r: {self.jegyar} Ft"

# --- JegyFoglal√°s oszt√°ly ---
class JegyFoglalas:
    def __init__(self, jarat, datum: date):
        self.jarat = jarat
        self.datum = datum

    def __str__(self):
        return f"{self.jarat.jaratszam} | {self.jarat.celallomas} | {self.datum} | {self.jarat.jegyar} Ft"

# --- L√©giT√°rsas√°g oszt√°ly ---
class LegiTarsasag:
    def __init__(self, nev):
        self.nev = nev
        self.jaratok = []
        self.foglalasok = []

    def jarat_hozzaadas(self, jarat):
        self.jaratok.append(jarat)

    def jegy_foglalasa(self, jaratszam, datum):
        jarat = next((j for j in self.jaratok if j.jaratszam == jaratszam), None)
        if not jarat:
            return "‚ùå Nincs ilyen j√°ratsz√°m."
        if datum < date.today():
            return "‚ùå Csak j√∂v≈ëbeli d√°tumra lehet foglalni."
        if any(f.jarat.jaratszam == jaratszam and f.datum == datum for f in self.foglalasok):
            return "‚ùå Erre a j√°ratra m√°r van foglal√°s ezen a napon."
        uj_foglalas = JegyFoglalas(jarat, datum)
        self.foglalasok.append(uj_foglalas)
        return f"‚úÖ Foglal√°s sikeres. √År: {jarat.jegyar} Ft"

    def foglalas_lemondasa(self, jaratszam, datum):
        for foglalas in self.foglalasok:
            if foglalas.jarat.jaratszam == jaratszam and foglalas.datum == datum:
                self.foglalasok.remove(foglalas)
                return "‚úÖ Foglal√°s lemondva."
        return "‚ùå Nem tal√°lhat√≥ ilyen foglal√°s."

    def listaz_foglalasok(self):
        if not self.foglalasok:
            return "‚ÑπÔ∏è Nincsenek aktu√°lis foglal√°sok."
        return "\n".join(str(f) for f in self.foglalasok)

    def listaz_jaratok(self):
        return "\n".join(j.jarat_info() for j in self.jaratok)

# --- Konzolos felhaszn√°l√≥i interf√©sz ---
def main():
    legitarsasag = LegiTarsasag("SkyWings")

    # El≈ëre felt√∂lt√∂tt j√°ratok
    legitarsasag.jarat_hozzaadas(BelfoldiJarat("B30356", "Debrecen", 12000, 230))
    legitarsasag.jarat_hozzaadas(NemzetkoziJarat("N34698", "London", 45000, "Egyes√ºlt Kir√°lys√°g"))
    legitarsasag.jarat_hozzaadas(BelfoldiJarat("B30332", "P√©cs", 15000, 200))
    legitarsasag.jarat_hozzaadas(NemzetkoziJarat("N34657", "Frankfurt", 32000, "N√©metorsz√°g"))
    legitarsasag.jarat_hozzaadas(NemzetkoziJarat("N34627", "B√©cs", 25000, "Osztr√°kia"))
    legitarsasag.jarat_hozzaadas(NemzetkoziJarat("N46709", "Antalya", 42000, "T√∂r√∂korsz√°g"))



    while True:
        print("\n--- REP√úL≈êJEGY FOGLAL√ÅSI RENDSZER ---")
        print("1. J√°ratok list√°z√°sa")
        print("2. Jegy foglal√°sa")
        print("3. Foglal√°s lemond√°sa")
        print("4. Aktu√°lis foglal√°sok list√°z√°sa")
        print("0. Kil√©p√©s")
        valasz = input("V√°laszt√°s: ")

        if valasz == "1":
            print("\n-- El√©rhet≈ë j√°ratok --")
            print(legitarsasag.listaz_jaratok())
        elif valasz == "2":
            jaratszam = input("J√°ratsz√°m: ").upper()
            datum = input("D√°tum (√â√â√â√â-HH-NN): ")
            try:
                ev, ho, nap = map(int, datum.split("-"))
                datum_obj = date(ev, ho, nap)
                print(legitarsasag.jegy_foglalasa(jaratszam, datum_obj))
            except ValueError:
                print("‚ùå Hib√°s d√°tumform√°tum.")
        elif valasz == "3":
            jaratszam = input("J√°ratsz√°m: ").upper()
            datum = input("D√°tum (√â√â√â√â-HH-NN): ")
            try:
                ev, ho, nap = map(int, datum.split("-"))
                datum_obj = date(ev, ho, nap)
                print(legitarsasag.foglalas_lemondasa(jaratszam, datum_obj))
            except ValueError:
                print("‚ùå Hib√°s d√°tumform√°tum.")
        elif valasz == "4":
            print("\n-- Aktu√°lis foglal√°sok --")
            print(legitarsasag.listaz_foglalasok())
        elif valasz == "0":
            print("üëã Viszl√°t!")
            break
        else:
            print("‚ùó √ârv√©nytelen opci√≥.")

if __name__ == "__main__":
    main()